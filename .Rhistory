x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
plot(x,y)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,150))
lines(xx, predict(fit, data.frame(x=xx)), col="red")
lines(xx, predict(fit2, data.frame(x=xx)), col="green")
lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
x <- c(50,75,100,125,150,175,200)
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,150))
# lines(xx, predict(fit, data.frame(x=xx)), col="red")
# lines(xx, predict(fit2, data.frame(x=xx)), col="green")
# lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
# lines(xx, predict(fit, data.frame(x=xx)), col="red")
# lines(xx, predict(fit2, data.frame(x=xx)), col="green")
# lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
lines(xx, predict(fit, data.frame(x=xx)), col="red")
lines(xx, predict(fit2, data.frame(x=xx)), col="green")
lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#fourth degree
fit5 <- lm(y~poly(x,5,raw=TRUE))
#fourth degree
fit6 <- lm(y~poly(x,6,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
lines(xx, predict(fit, data.frame(x=xx)), col="red")
lines(xx, predict(fit2, data.frame(x=xx)), col="green")
lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#fourth degree
fit5 <- lm(y~poly(x,5,raw=TRUE))
#fourth degree
fit6 <- lm(y~poly(x,6,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
#lines(xx, predict(fit, data.frame(x=xx)), col="red")
#lines(xx, predict(fit2, data.frame(x=xx)), col="green")
#lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
#lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
#lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
brine_shrimp <- function(nmonths = 240, overwintering_cysts_init = 250, elevation = function(x){return(6380)}) {
# bibliotecas
library(stats)
# constantes
predation_loss_fraction <- 0.5
fraction_female <- 0.5
interval_between_broods <- 1
# relacoes empiricas
salinity <- approxfun(x = c(6330, 6335, 6340, 6345, 6350, 6355, 6360, 6365, 6370, 6375, 6380), y = c(250, 210, 190, 170, 155, 140, 130, 120, 110, 97, 88), rule=2) # func (elevation) [g/L]
cyst_hatching_fraction <- approxfun(x = c(50, 75, 100, 125, 150, 175, 200), y = c(0.6, 0.2, 0.12, 0.07, 0.03, 0.01, 0), rule=2) # func (salinity)
brood_size <- approxfun(x = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2), y = c(50, 20, 15, 12, 10, 8, 5, 1, 0), rule=2) # func (congestion)
# funcoes
potential_births <- function(month, overwintering_cysts) {
if (month == 2)
return(overwintering_cysts)
else return(0)
}
births_from_cysts <- function(potential_births, cyst_hatching_fraction) {
potential_births * cyst_hatching_fraction
}
cyst_loss <- function(potential_births, cyst_hatching_fraction) {
potential_births * (1 - cyst_hatching_fraction)
}
capacity <- function(month, salinity) {
capacity_multiplier <- approxfun(x = c(50, 75, 100, 125, 150, 175, 200), y = c(1, 1, 1, 0.9, 0.5, 0.1, 0)) # func (salinity)
if (month == 7) {
normal_capacity <- 30
} else {
normal_capacity <- 20
}
return(normal_capacity * capacity_multiplier(salinity))
}
congestion <- function(month, adults, capacity) {
if (month == 7 || month == 8) {
return(adults/capacity)
} else {
return(0.5)
}
}
cyst_deposition <- function(female_adults, brood_size, interval_between_broods) {
female_adults * brood_size/interval_between_broods
}
female_adults <- function(adults, fraction_female) {
adults * fraction_female
}
predation_from_birds <- function(adults, predation_loss_fraction) {
adults * predation_loss_fraction
}
month <- function(m) {
return(m%%12)
}
maturation <- function(naup_juv, month) {
if (month > 6) {
return(naup_juv)
} else {
return(0)
}
}
deaths <- function(adults, month) {
if (month > 8) {
return(adults)
} else {
return(0)
}
}
###########
# inicializa vetores
vOVERWINTERING_CYSTS <- NULL
vNAUP_JUV <- NULL
vADULTS <- NULL
vSALINITY <- NULL # salinidade [g/L]
# estoques iniciais [ks/sm] (thousand shrimp per square meter)
OVERWINTERING_CYSTS <- overwintering_cysts_init
NAUP_JUV <- 0
ADULTS <- 0
# fluxos [ks/sm]/[month] (thousand shrimp per square meter)
for (i in 1:nmonths) {
ADULTS <- (ADULTS + maturation(NAUP_JUV, month(i)) - deaths(ADULTS, month(i)) - predation_from_birds(ADULTS, predation_loss_fraction))
if (ADULTS < 0) {ADULTS <- 0}
NAUP_JUV <- (NAUP_JUV + births_from_cysts(potential_births(month(i), OVERWINTERING_CYSTS), cyst_hatching_fraction(salinity(elevation(i)))) - maturation(NAUP_JUV, month(i)))
if (NAUP_JUV < 0) {NAUP_JUV <- 0}
OVERWINTERING_CYSTS <- (OVERWINTERING_CYSTS + cyst_deposition(female_adults(ADULTS, fraction_female), brood_size(congestion(month(i), ADULTS, capacity(month(i), salinity(elevation(i))))), interval_between_broods) - cyst_loss(potential_births(month(i), OVERWINTERING_CYSTS), cyst_hatching_fraction(salinity(elevation(i)))) - births_from_cysts(potential_births(month(i), OVERWINTERING_CYSTS), cyst_hatching_fraction(salinity(elevation(i)))))
if (OVERWINTERING_CYSTS < 0) {OVERWINTERING_CYSTS <- 0}
vSALINITY[i] <- salinity(elevation(i))
vOVERWINTERING_CYSTS[i] <- OVERWINTERING_CYSTS
vNAUP_JUV[i] <- NAUP_JUV
vADULTS[i] <- ADULTS
}
return(data.frame(overwintering_cysts = vOVERWINTERING_CYSTS, naup_juv = vNAUP_JUV, adults = vADULTS, salinity = vSALINITY))
}
brine_shrimp(nmonths = 48, overwintering_cysts_init = 250)
plot(brine_shrimp(nmonths = 48, overwintering_cysts_init = 250))
fit6
fit6(88)
7.640e+00
-3.358e-01
6.241e-03
-6.113e-05
- 0.3358 * (88) + 0.006241 * (88 * 88) - 0.00006 * (88 * 88 * 88) + 0.0000003 * (88 * 88 * 88 * 88) - 0.000000009 * (88 * 88 * 88 * 88 * 88) + 0.000000000001 * (88 * 88 * 88 * 88 * 88 * 88) + 7.64
(- 0.3358 * (88)) + (0.006241 * (88 * 88)) - (0.00006 * (88 * 88 * 88)) + (0.0000003 * (88 * 88 * 88 * 88)) - (0.000000009 * (88 * 88 * 88 * 88 * 88)) + (0.000000000001 * (88 * 88 * 88 * 88 * 88 * 88)) + 7.64
exp
?exp
exp(4,2)
exp(4)
x = 88
x^2
2^2
(- 0.3358 * (88^6)) + (0.006241 * (88^5)) - (0.00006 * (88^4)) + (0.0000003 * (88^3)) - (0.000000009 * (88^2)) + (0.000000000001 * (88^1)) + 7.64
- 0.3358 * (88^6) + 0.006241 * (88^5) - 0.00006 * (88^4) + 0.0000003 * (88^3) - 0.000000009 * (88^2) + 0.000000000001 * (88^1) + 7.64
(- 0.3358 * (88^6)) + 0.006241 * (88^5) + (-6.113e-05 * (88^4)) + 0.0000003 * (88^3) + (- 0.000000009 * (88^2)) + 0.000000000001 * (88^1) + 7.64
(- 0.3358 * (88^6)) + 0.006241 * (88^5) + (-6.113e-05 * (88^4)) + 3.305e-07 * (88^3) + (-9.344e-10 * (88^2)) + 1.081e-12 * (88^1) + 7.64
fit6
fit6$Coefficients
fit6["Coefficients"]
summary(fit6)
lm(y~poly(88,6,raw=TRUE))
(- 0.3358 * (88^5)) + 0.006241 * (88^4) + (-6.113e-05 * (88^3)) + 3.305e-07 * (88^2) + (-9.344e-10 * (88^1)) + 1.081e-12 * (88^0) + 7.64
(- 0.3358 * (88^5)) + 0.006241 * (88^4) + (-6.113e-05 * (88^3)) + 3.305e-07 * (88^2) + (-9.344e-10 * (88^1)) + 1.081e-12 * 1 + 7.64
(1.081e-12 * (x^6)) + -9.344e-1041 * (x^5) + (3.305e-07  * (88^4)) + -6.113e-05 * (x^3) + (6.241e-03  * (x^2)) + -3.358e-01  * (x) + 7.64
1.081e-12 * (x^6) -9.344e-1041 * (x^5) + (3.305e-07  * (88^4)) -6.113e-05 * (x^3) + (6.241e-03  * (x^2)) -3.358e-01  * (x) + 7.64
?predict
predict(fit6, data.frame(x=88))
x = 88
1.081e-12 * (x^6) -9.344e-1041 * (x^5) + 3.305e-07  * (x^4) -6.113e-05 * (x^3) + (6.241e-03  * (x^2)) -3.358e-01  * (x) + 7.64
d <- approxfun(x = c(50, 75, 100, 125, 150, 175, 200), y = c(0.6, 0.2, 0.12, 0.07, 0.03, 0.01, 0), rule=2)
d(88)
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + (6.241e-03  * (88^2)) -3.358e-01  * (88) + 7.64
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + (6.241e-03  * (88^2)) -3.358e-01  * (88) + 7.64
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
fit  <- lm(y~x)
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#fourth degree
fit5 <- lm(y~poly(x,5,raw=TRUE))
#fourth degree
fit6 <- lm(y~poly(x,6,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,1.0))
lines(xx, predict(fit, data.frame(x=xx)), col="red")
lines(xx, predict(fit2, data.frame(x=xx)), col="green")
lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,1.0))
lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=88))
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6)
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6)
plot(x,y,pch=19,ylim=c(0,0.6))
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=88)) #0.147182
?predict
fit6
7.640 + (-3.358e-01) * (88^1) + 6.241e-03 * (88^2) + (-6.113-05) * (88^3) + 3.305e-07 * (88^4) + (-9.344e-10) * (88^5) + 1.081e-12 * (88^6)
7.640 + (-3.358e-01) * (88^6) + 6.241e-03 * (88^5) + (-6.113-05) * (88^4) + 3.305e-07 * (88^3) + (-9.344e-10) * (88^2) + 1.081e-12 * (88^1)
7.64
7.64 + (-3.358e-01) * (88^6) + 6.241e-03 * (88^5) + (-6.113-05) * (88^4) + 3.305e-07 * (88^3) + (-9.344e-10) * (88^2) + 1.081e-12 * (88^1)
7,64
(-3.358e-01) * (88^1) + 6.241e-03 * (88^2) + (-6.113-05) * (88^3) + 3.305e-07 * (88^4) + (-9.344e-10) * (88^5) + 1.081e-12 * (88^6) + 7.64
brood_size <- approxfun(x = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2), y = c(50, 20, 15, 12, 10, 8, 5, 1, 0), rule=2) # func (congestion)
brood_size
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + (6.241e-03  * (88^2)) -3.358e-01  * (88) + 7.64
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#fourth degree
fit5 <- lm(y~poly(x,5,raw=TRUE))
#fourth degree
fit6 <- lm(y~poly(x,6,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,1.0))
#lines(xx, predict(fit, data.frame(x=xx)), col="red")
#lines(xx, predict(fit2, data.frame(x=xx)), col="green")
#lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
#lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
#lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=88))
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=88)) #0.147182
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + (6.241e-03  * (88^2)) -3.358e-01  * (88) + 0.764
7.64/10
1.081e-12/10 * (88^6) -9.344e-1041/10 * (88^5) + 3.305e-07/10  * (88^4) -6.113e-05/10 * (88^3) + 6.241e-03/10  * (88^2) -3.358e-01/10  * (88) + 0.764
-1.081e-12/10 * (88^6)
(-1.081e-12/10) * (88^6)
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + 6.241e-03  * (88^2) -3.358e-01  * (88) + 0.764
1.081e-12 * (88^6) -9.344e-1041 * (88^5) + 3.305e-07  * (88^4) -6.113e-05 * (88^3) + 6.241e-03  * (88^2) -3.358e-01  * (88) + 7.64
predict(fit6, data.frame(x=200))
x <- c(50,75,100,125,150,175,200)
y <- c(0.6,0.2,0.12, 0.07, 0.03, 0.01, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,0.6))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=88)) #0.147182
predict(fit6, data.frame(x=200)) #0.147182
predict(fit6, data.frame(x=88)) #0.147182
x <- c(1.00,  1.05, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35, 1.40)
y <- c(1.000, 0.963, 0.926, 0.880, 0.883, 0.785, 0.737, 0.688, 0.640)
plot(x,y)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(1,1.4, length=50)
plot(x,y,pch=19,ylim=c(0,1))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
fit6
fit6 <- lm(y~poly(x,7,raw=TRUE))
xx <- seq(1,1.4, length=50)
plot(x,y,pch=19,ylim=c(0,1))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
fit6
x <- c(1.00,  1.05, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35, 1.40)
y <- c(1.000, 0.963, 0.926, 0.880, 0.883, 0.785, 0.737, 0.688, 0.640)
fit6 <- lm(y~poly(x,8,raw=TRUE))
xx <- seq(1,1.4, length=50)
plot(x,y,pch=19,ylim=c(0,1))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
7.640e+00 -3.358e-01*88 + 6.241e-03*88^2 -6.113e-05*88^3 + 3.305e-07*88^4 -9.344e-10*88^5 + 1.081e-12*88^6
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0
(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
fit  <- lm(y~x)
x <- c(50,75,100,125,150,175,200)
y <- c(1.00, 1.00, 1.00, 0.9, 0.5, 0.1, 0.0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,1.0))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
fit6
x <- c(0, 0.25, 0.5, 0.75, 1.00, 1.25, 1.5, 1.75, 2.00)
y <- c(50, 20, 15, 12, 10, 8, 5, 1, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(1,2, length=50)
plot(x,y,pch=19,ylim=c(0,1.0))
x <- c(0, 0.25, 0.5, 0.75, 1.00, 1.25, 1.5, 1.75, 2.00)
y <- c(50, 20, 15, 12, 10, 8, 5, 1, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(1,2, length=50)
plot(x,y,pch=19,ylim=c(0,50.0))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
x <- c(0, 0.25, 0.5, 0.75, 1.00, 1.25, 1.5, 1.75, 2.00)
y <- c(50, 20, 15, 12, 10, 8, 5, 1, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(0,2, length=50)
plot(x,y,pch=19,ylim=c(0,50.0))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=200))
x <- c(50,75,100,125,150,175,200)
y <- c(1,1,1, 0.9, 0.5, 0.1, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(50,200, length=50)
plot(x,y,pch=19,ylim=c(0,1))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
predict(fit6, data.frame(x=xx)) #0.147182
x <- c(0, 0.25, 0.5, 0.75, 1.00, 1.25, 1.5, 1.75, 2.00)
y <- c(50, 20, 15, 12, 10, 8, 5, 1, 0)
fit6 <- lm(y~poly(x,6,raw=TRUE))
xx <- seq(0,2, length=50)
plot(x,y,pch=19,ylim=c(0,50.0))
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
fit6
x <- c(0, 0.25, 0.5, 0.75, 1.00, 1.25, 1.5, 1.75, 2.00)
y <- c(50, 20, 15, 12, 10, 8, 5, 1, 0)
fit  <- lm(y~x)
#second degree
fit2 <- lm(y~poly(x,2,raw=TRUE))
#third degree
fit3 <- lm(y~poly(x,3,raw=TRUE))
#fourth degree
fit4 <- lm(y~poly(x,4,raw=TRUE))
#fourth degree
fit5 <- lm(y~poly(x,5,raw=TRUE))
#fourth degree
fit6 <- lm(y~poly(x,6,raw=TRUE))
#generate range of 50 numbers starting from 30 and ending at 160
xx <- seq(0,2, length=50)
plot(x,y,pch=19,ylim=c(0,50.0))
lines(xx, predict(fit, data.frame(x=xx)), col="red")
lines(xx, predict(fit2, data.frame(x=xx)), col="green")
lines(xx, predict(fit3, data.frame(x=xx)), col="blue")
lines(xx, predict(fit4, data.frame(x=xx)), col="purple")
lines(xx, predict(fit5, data.frame(x=xx)), col="yellow")
lines(xx, predict(fit6, data.frame(x=xx)), col="black")
fit6
require(RJSONIO)
getData <- function(id, time){
url <- paste("http://api.openweathermap.org/data/2.5/history/city?id=",id,"&type=hour&start=",time,"&cnt=1&units=metric", collapse = "")
data_str <- paste(url, collapse = "")
data <- fromJSON(data_str)
data
}
getMainInfo <- function(data){
main <- data$list[[2]]$main
main
}
getValueFromMain <- function(main, type){
x <- main[type]
x <- unname(x)
x
}
getCityId <- function(lat, lon){
url <- paste("http://api.openweathermap.org/data/2.5/find?lat=", lat, "&lon=",-2.15, "&cnt=1", collapse = "")
data <- fromJSON(url)
id <- (data$list[[1]]$id)
id
}
getTemp <- function (lat, lon, time){
id <- getCityId(lat, lon)
data <- getData(id, time)
main <- getMainInfo(data)
getValueFromMain(main, "temp")
}
getTemp(51,7, 1369728000)
getTemp <- function (lat, lon, time, att){
id <- getCityId(lat, lon)
data <- getData(id, time)
main <- getMainInfo(data)
getValueFromMain(main, att)
}
getTemp(51,7, 1369728000, "temp")
getTemp(51,7, 1369728000, "humidity")
getClimaticInfo(51,7, 1369728000, "humidity")
getClimaticInfo <- function (lat, lon, time, att){
id <- getCityId(lat, lon)
data <- getData(id, time)
main <- getMainInfo(data)
getValueFromMain(main, att)
}
getClimaticInfo(51,7, 1369728000, "humidity")
getClimaticInfo(51,7, 1369728000, "temp")
setwd("~/GitHub/Trajectories")
require(RJSONIO)
getData <- function(id, time){
url <- paste("http://api.openweathermap.org/data/2.5/history/city?id=",id,"&type=hour&start=",time,"&cnt=1&units=metric", collapse = "")
data_str <- paste(url, collapse = "")
data <- fromJSON(data_str)
data
}
getMainInfo <- function(data){
main <- data$list[[2]]$main
main
}
getValueFromMain <- function(main, type){
x <- main[type]
x <- unname(x)
x
}
getCityId <- function(lat, lon){
url <- paste("http://api.openweathermap.org/data/2.5/find?lat=", lat, "&lon=",-2.15, "&cnt=1", collapse = "")
data <- fromJSON(url)
id <- (data$list[[1]]$id)
id
}
getClimaticInfo <- function (lat, lon, time, att){
id <- getCityId(lat, lon)
data <- getData(id, time)
main <- getMainInfo(data)
getValueFromMain(main, att)
}
getClimaticInfo(51,7, 1369728000, "humidity")
getClimaticInfo(51,7, 1369728000, "temp")
?plot.density
