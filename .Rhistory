y = y),
colour = "black",
size = 2) +
geom_path(aes(x = x,
y = y),
colour = pathcolor,
size = 1.4)
plot <- plot +  labs(x = "Longitude", y = "Latitude")
plot <- plot +  ggtitle(paste(c(l, "km in", t, "minutes"), collapse = " "))
return(plot)
}
localMaxima <- function(x) {
y <- diff(c(-.Machine$integer.max, x)) > 0L
rle(y)$lengths
y <- cumsum(rle(y)$lengths)
y <- y[seq.int(1L, length(y), 2L)]
if (x[[1]] == x[[2]]) {
y <- y[-1]
}
y
}
localMinima <- function(x) {
y <- diff(c(.Machine$integer.max, x)) > 0L
rle(y)$lengths
y <- cumsum(rle(y)$lengths)
y <- y[seq.int(1L, length(y), 2L)]
if (x[[1]] == x[[2]]) {
y <- y[-1]
}
y
}
v <- vector()
slope <- function (x,y, elevation, coords){
l <- round(tracklength(coords[x:y]), 2)
sl <- as.numeric(elevation[x])-as.numeric(elevation[y])
p <- sl/l * 100
p <- round(p * (-1), 2)
v <- c(l, p)
v #%
}
calculateSlope <- function (tr) {
elevation <- as.vector(tr@data$tr.ele)
coords <- tr@sp
existingDF <- data.frame()
x <- 1:length(elevation)
lowpass.spline <- smooth.spline(x,elevation, spar = 0.6)
s_values <- lowpass.spline["y"]
values <- do.call(c, s_values)
minimas <- as.integer(localMinima(values))
maximas <- as.integer(localMaxima(values))
l_min <- length(minimas)
l_max <- length(maximas)
if (maximas[1] < minimas[1]) {
if (maximas[l_max] > minimas[l_min])
{
#print("Anfang: Max, Ende: Max")
for (i in 1:(length(maximas)-1)) {
slope1 <- slope(maximas[i], minimas[i], elevation, coords)
existingDF = rbind(existingDF,slope1)
slope2 <- slope(minimas[i], maximas[i+1], elevation, coords)
existingDF = rbind(existingDF,slope2)
}
}
else {
#print("Anfang: Max, Ende: Min")
for (i in 1:length(maximas)) {
slope1 <- slope(maximas[i], minimas[i], elevation, coords)
existingDF = rbind(existingDF,slope1)
if (i < length(maximas))
{
slope2 <- slope(minimas[i], maximas[i+1], elevation, coords)
existingDF = rbind(existingDF,slope2)
}
}
}
}
else {
if (minimas[1] < maximas[1]) {
if (maximas[l_max] < minimas[l_min])
{
#print("Anfang: Min, Ende: Min")
for (i in 1:(length(minimas)-1)) {
slope1 <- slope(minimas[i], maximas[i], elevation, coords)
existingDF = rbind(existingDF,slope1)
slope2 <- slope(maximas[i], minimas[i+1], elevation, coords)
existingDF = rbind(existingDF,slope2)
}
}
else {
#print("Anfang: Min, Ende: Max")
for (i in 1:length(maximas)) {
slope1 <- slope(minimas[i], maximas[i], elevation, coords)
existingDF = rbind(existingDF,slope1)
if (i < length(maximas))
{
slope2 <- slope(maximas[i], minimas[i+1], elevation, coords)
existingDF = rbind(existingDF,slope2)
}
}
}
}
}
names(existingDF) <- c("distance [metres]", "slope [%]")
existingDF
}
##
plotEleSpeed <- function (tr){
elevation <- as.vector(tr@data$tr.ele)
time <- index(tr@time)
xlab <- toString(as.Date(time[1]))
min_e <- min(as.numeric(elevation))
max_e <- max(as.numeric(elevation))
ymin <- min(as.numeric(elevation))
ymax <- max(as.numeric(elevation))
h <- tr@connections
med <- median(tr@connections$speed)
h <- rbind(h, c(0, 0, med, 0))
#speed <- h$speed
lowpass.spline <- smooth.spline(time, h$speed, spar = 0.6)
s_values <- lowpass.spline["y"]
speed <- do.call(c, s_values)
ylim <- c(ymin, ymax)
par(mar=c(5,4,4,5)+.1)
plot(time, elevation, ylim=ylim, type="l", col="black", lwd=3, xlab = xlab, ylab="")
par(new=TRUE)
plot(time, speed, type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="", lwd=3)
axis(4)
mtext("Speed [m/s]", side=4, line=3, col="blue")
mtext("Elevation [m]", side=2, line=3, col="black")
}
## Import
ddir1 <- "dat/2014-08-14-Running.gpx"
ddir2 <- "dat/2015-02-01-Running.gpx"
Tr1 <- getTr(ddir1)
Tr2 <- getTr(ddir2)
## GetStats
getStats(Tr1)
getStats(Tr2)
## Plot with Basic Map
df <- as.data.frame(Tr2@sp@coords)
x <- df[,1]
y <- df[,2]
plotMap(Tr2, x, y)
df <- as.data.frame(Tr1@sp@coords)
x <- df[,1]
y <- df[,2]
plotMap(Tr1, x, y)
## Plot Elevation with Speed
plotEleSpeed (Tr1)
plotEleSpeed (Tr2)
## Slope
calculateSlope(Tr1)
calculateSlope(Tr2)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red",  guide = "legend")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red",  guide = "legend")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpe(Tr2)
plotSpe(Tr1)
plotSpe(Tr2)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red",  guide = "gradient")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpe(Tr2)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpe(Tr2)
plotMa <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
x <- df[,1]
y <- df[,2]
plotMap(tr, x, y)
}
plotMa(Tr1)
plotMa(Tr2)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpe(Tr2)
plot(0:10, 0:10, type="l")
par(new=T)
plot(0:20, 20:0, type="l", col=2)
par(new=F)
plot(0:10, 0:10, type="l")
par(new=T)
plot(0:20, 20:0, type="l", col=2)
par(new=F)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
plot(0:10, 0:10, type="l")
plot(0:20, 20:0, type="l", col=2)
plotSpe <- function(tr1, tr2)
{
df1 <- as.data.frame(tr1@sp@coords)
h1 <- rbind(tr1@connections, c(0,0,0,0))
df1["speed"] <- h1$speed * 3.6
par(mfrow=c(1,2))
plotSpeed(tr1, df1)
df2 <- as.data.frame(tr2@sp@coords)
h2 <- rbind(tr2@connections, c(0,0,0,0))
df2["speed"] <- h2$speed * 3.6
plotSpeed(tr2, df2)
}
plotSpe(Tr1, Tr2)
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr2)
plotSpe(Tr1)
?
?dlply
par(mfrow=c(1,2))
plotSpe(Tr2)
plotSpe(Tr1)
par(mfrow=c(2,1))
plotSpe(Tr2)
plotSpe(Tr1)
attach(mtcars)
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(mfrow=c(1,2))
plot(0:10, 0:10, type="l")
plot(0:20, 20:0, type="l", col=2)
par(mfrow=c(1,2))
plotSpe(Tr2)
plotSpe(Tr1)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
par(mfrow=c(1,2))
plot
plot
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
par(mfrow=c(1,2))
plot
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr1)
plotSpeed <- function(tr, df)
{
minlon <- tr@sp@bbox[1,1]
minlat <- tr@sp@bbox[2,1]
maxlon <- tr@sp@bbox[1,2]
maxlat <- tr@sp@bbox[2,2]
mapImageData <- get_map(location = c(minlon, minlat, maxlon, maxlat),
#color = "color", # or bw
source = "stamen",
maptype = "toner",
zoom = 13)
plot <- ggmap(mapImageData,
extent = "panel",
ylab = "Latitude",
xlab = "Longitude",
legend = "right")
plot <- plot +  geom_point(aes_string(x = "lon",
y = "lat",
color = "speed"),
size = 5,
data = df)
plot <- plot + scale_colour_gradient("Speed [km/h]", low="red")
return(plot)
}
plotSpe <- function(tr)
{
df <- as.data.frame(tr@sp@coords)
h <- rbind(tr@connections, c(0,0,0,0))
df["speed"] <- h$speed * 3.6
plotSpeed(tr, df)
}
plotSpe(Tr2)
